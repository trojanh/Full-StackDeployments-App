{"version":3,"sources":["reducers/deploymentReducer.js","components/CreateDeployment.js","services/deleteDeployment.js","components/DeploymentItem.js","services/addDeployment.js","services/fetchDeployments.js","views/DeploymentList.js","App.js","serviceWorker.js","index.js"],"names":["initState","deploymentList","deploymentReducer","state","action","type","console","log","payload","TEMPLATES","Error","children","className","CreateDeployment","addNewDeployment","useState","selectedTemplate","useForm","register","handleSubmit","reset","errors","formState","onSubmit","id","value","disabled","defaultValue","map","temp","index","name","htmlFor","versions","required","pattern","url","onClick","deleteDeployment","fetch","process","API_BASE_URL","method","then","resp","json","DeploymentItem","props","useSelector","dispatch","useDispatch","item","version","templateName","deploymentId","_id","data","newDeploymentList","filter","addDeployment","inputData","headers","Accept","body","JSON","stringify","fetchDeployments","TodoList","setIsLoading","useEffect","response","length","App","DeploymentList","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e42d28cf.chunk.js","sourcesContent":["const initState = {\n    deploymentList: [\n        // {\n        //     id: 1,\n        //     url: 1,\n        //     version: \"0.0.0\",\n        //     templateName: 'Play video game',\n        //     deployed: (new Date()).toISOString()\n        // }, {\n        //     url: 1,\n        //     id: 2,\n        //     version: \"0.0.0\",\n        //     templateName: 'Learn nodejs & python',\n        //     deployed: (new Date()).toISOString()\n        // }, {\n        //     id: 3,\n        //     url: 1,\n        //     version: \"0.0.0\",\n        //     templateName: 'Join meetup event',\n        //     deployed: (new Date()).toISOString()\n        // }\n    ]\n}\n\nconst deploymentReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'INIT_DEPLOYMENT':\n            console.log((action));\n            return {\n                ...state,\n                deploymentList: [\n                    ...action.payload,\n                ]\n            }\n        case 'ADD_DEPLOYMENT':\n            return {\n                ...state,\n                deploymentList: [\n                    ...state.deploymentList,\n                    action.payload\n                ]\n            }\n        case 'REMOVE_DEPLOYMENT':\n            return {\n                ...state,\n                deploymentList: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default deploymentReducer;\n","import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\n\nconst TEMPLATES = [\n  {\n    \"name\": \"Sporty\",\n    \"deployedAt\": \"28-05-89\",\n    \"url\":\"https://www.npoint.io/docs/8f7cf8628b367ffd50a2\",\n    \"versions\": [\n      \"1.0.0\",\n      \"1.1.0\",\n      \"1.2.0\",\n      \"1.2.1\",\n      \"1.3.0\",\n      \"2.0.0\"\n    ]\n  },\n  {\n    \"name\": \"Node\",\n    \"deployedAt\": \"18-10-2021\",\n    \"url\":\"https://www.npoint.io/docs/8f7cf8628b367ffd50a2\",\n    \"versions\": [\n      \"1.2.0\",\n      \"1.2.1\",\n      \"1.3.0\",\n      \"2.0.0\"\n    ]\n  }\n]\nconst Error = ({ children }) => (\n  <span className=\"new badge red\">{children}</span>\n)\n\nconst CreateDeployment = ({ addNewDeployment }) => {\n  const [selectedTemplate, setTemplate] = useState(TEMPLATES[0])\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm()\n\n  return (\n    <div className=\"row\">\n      <form className=\"col s12\" onSubmit={handleSubmit(addNewDeployment)}>\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <select\n              className=\"browser-default\"\n              id=\"template\"\n              // onSelect={}\n              {...register('templateName')}\n            >\n              <option value=\"\" disabled defaultValue=\"\">\n                Choose your template\n              </option>\n              {\n                TEMPLATES.map((temp, index) => {\n                  return <option value={temp.name} key={temp+index}>{temp.name}</option>\n                })\n              }\n            </select>\n            <label className=\"active\" htmlFor=\"template\">\n              Template\n            </label>\n          </div>\n          <div className=\"input-field col s12\">\n            <select\n              className=\"browser-default\"\n              id=\"version\"\n              // onSelect={}\n              {...register('version')}\n            >\n              <option value=\"\" disabled defaultValue=\"\">\n                Choose version\n              </option>\n              {\n                selectedTemplate.versions.map((temp, index) => {\n                  return <option value={temp} key={temp+index}>{temp}</option>\n                })\n              }\n            </select>\n            <label className=\"active\" htmlFor=\"template\">\n              Version\n            </label>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              id=\"url\"\n              type=\"text\"\n              className=\"validate\"\n              {...register('url', {\n                required: true,\n                pattern:\n                  /[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\\\+.~#?&//=]*)?/gi\n              })}\n            />\n            <label className=\"active\" htmlFor=\"url\">\n              Url\n            </label>\n            {errors?.url?.type === 'pattern' && (\n              <Error>Should be a valid url</Error>\n            )}\n          </div>\n        </div>\n        <button className=\"btn col s2 blue\" type=\"submit\" onClick={reset}>\n          Add New Deployment\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateDeployment\n","function deleteDeployment(id) {\n  return fetch(process.env.API_BASE_URL + '/deployments/' + id, {\n    method: 'DELETE'\n  }).then((resp) => resp.json())\n}\n\nexport default deleteDeployment\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport deleteDeployment from '../services/deleteDeployment';\n\nconst DeploymentItem = (props) => {\n    const deploymentList = useSelector(state => state.deploymentList)\n    const dispatch = useDispatch();\n\n    const removeDeploymentItem = (deploymentId) => {\n        deleteDeployment(deploymentId).then(data => {\n            if(!data) return\n            let newDeploymentList = deploymentList.filter(item => item._id !== deploymentId);\n            dispatch({type: 'REMOVE_DEPLOYMENT', payload: newDeploymentList})\n        })\n\n    }\n\n    return (\n        <tr key={props.item._id}>\n            <td>{props.item.version}</td>\n            <td>{props.item.templateName}</td>\n            <td>{props.item.url}</td>\n            <td\n                onClick={() => {\n                removeDeploymentItem(props.item._id)\n            }}\n                className=\"secondary-content\">\n                <i className=\"remove-btn material-icons blue-text\">clear</i>\n            </td>\n        </tr>\n    );\n}\n\nexport default DeploymentItem;\n","function addDeployment(inputData) {\n  return fetch(process.env.API_BASE_URL + '/deployments', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(inputData)\n  })\n    .then((resp) => resp.json())\n}\n\n\nexport default addDeployment\n","function fetchDeployments() {\n  return fetch(process.env.API_BASE_URL + '/deployments').then((data) =>\n    data.json()\n  )\n}\n\nexport default fetchDeployments\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport CreateDeployment from '../components/CreateDeployment'\nimport DeploymentItem from '../components/DeploymentItem'\nimport addDeployment from '../services/addDeployment'\nimport fetchDeployments from '../services/fetchDeployments'\n\nconst TodoList = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const deploymentList = useSelector((state) => state.deploymentList)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    setIsLoading(true)\n      fetchDeployments().then(\n        (data) => data && dispatch({ type: 'INIT_DEPLOYMENT', payload: data.data })\n      )\n      setIsLoading(false)\n    // loadDeployments()\n  }, [dispatch])\n\n  const addNewDeployment = (inputData) => {\n    // if(!data) console.log(data)\n    return addDeployment(inputData)\n      .then((response) => {\n        if(!response.data) return\n        console.log({ ...response.data })\n        dispatch({\n          type: 'ADD_DEPLOYMENT',\n          payload: response.data\n        })\n        // console.log({ data })\n      })\n  }\n  return (\n    <div className=\"row\">\n      <h3 className=\"center-align white-text blue\">Deployments</h3>\n\n      <div className=\"row\">\n        <CreateDeployment addNewDeployment={addNewDeployment} />\n      </div>\n      <div className=\"row\">\n        {deploymentList.length > 0 ? (\n          <table className=\"responsive-table\">\n            <tbody className=\"collection\">\n              {deploymentList.map((item) => {\n                return <DeploymentItem key={item._id} item={item} />\n              })}\n            </tbody>\n          </table>\n        ) : (\n          <p className=\"center-align\">\n            You don't have deployments! Please add a new one.\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default TodoList\n","import React from 'react';\nimport DeploymentList from './views/DeploymentList';\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <main className=\"container\">\n                <DeploymentList/>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport deploymentReducer from './reducers/deploymentReducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(deploymentReducer)\n\n\nReactDOM.render(\n<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}